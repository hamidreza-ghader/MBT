.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Lingua::Sentence 3"
.TH Lingua::Sentence 3 "2013-02-01" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Lingua::Sentence \- Perl extension for breaking text paragraphs into sentences
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use Lingua::Sentence;
\&
\&        my $splitter = Lingua::Sentence\->new("en");
\&
\&        my $text = \*(AqThis is a paragraph. It contains several sentences. "But why," you ask?\*(Aq;
\&
\&        print $splitter\->split($text);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module allows splitting of text paragraphs into sentences. It is based on scripts developed by Philipp Koehn and Josh Schroeder for processing the Europarl corpus (<http://www.statmt.org/europarl/>).
.PP
The module uses punctuation and capitalization clues to split paragraphs into an newline-separated string with one sentence per line. For example:
.PP
.Vb 1
\&        This is a paragraph. It contains several sentences. "But why," you ask?
.Ve
.PP
goes to:
.PP
.Vb 3
\&        This is a paragraph.
\&        It contains several sentences.
\&        "But why," you ask?
.Ve
.PP
Languages currently supported by the module are:
.IP "Catalan" 4
.IX Item "Catalan"
.PD 0
.IP "Czech" 4
.IX Item "Czech"
.IP "Dutch" 4
.IX Item "Dutch"
.IP "English" 4
.IX Item "English"
.IP "French" 4
.IX Item "French"
.IP "German" 4
.IX Item "German"
.IP "Greek" 4
.IX Item "Greek"
.IP "Hungarian" 4
.IX Item "Hungarian"
.IP "Icelandic" 4
.IX Item "Icelandic"
.IP "Italian" 4
.IX Item "Italian"
.IP "Latvian" 4
.IX Item "Latvian"
.IP "Polish" 4
.IX Item "Polish"
.IP "Portuguese" 4
.IX Item "Portuguese"
.IP "Russian" 4
.IX Item "Russian"
.IP "Spanish" 4
.IX Item "Spanish"
.IP "Slovak" 4
.IX Item "Slovak"
.IP "Slovenian" 4
.IX Item "Slovenian"
.IP "Swedish" 4
.IX Item "Swedish"
.PD
.SS "Nonbreaking Prefixes Files"
.IX Subsection "Nonbreaking Prefixes Files"
Nonbreaking prefixes are loosely defined as any word ending in a period that does \s-1NOT\s0 indicate an end of sentence marker. A basic example is Mr. and Ms. in English.
.PP
The sentence splitter module uses the nonbreaking prefix files included in this distribution.
.PP
To add a file for other languages, follow the naming convention nonbreaking_prefix.?? and use the two-letter language code you intend to use when creating a Lingua::Sentence object.
.PP
The sentence splitter module will first look for a file for the language it is processing, and fall back to English if a file
for that language is not found.
.PP
For the splitter, normally a period followed by an uppercase word results in a sentence split. If the word preceeding the period
is a nonbreaking prefix, this line break is not inserted.
.PP
A special case of prefixes, \s-1NUMERIC_ONLY\s0, is included for special cases where the prefix should be handled \s-1ONLY\s0 when before numbers.
For example, \*(L"Article No. 24 states this.\*(R" the No. is a nonbreaking prefix. However, in \*(L"No. It is not true.\*(R" No functions as a word.
.PP
See the example prefix files included in the distribution for more examples.
.PP
\fI\s-1CREDITS\s0\fR
.IX Subsection "CREDITS"
.PP
Thanks for the following individuals for supplying nonbreaking prefix files:
Bas Rozema (Dutch), Hila\*'rio Leal Fontes (Portuguese), Jesu\*'s Gime\*'nez (Catalan & Spanish)
.SS "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
.IP "new($lang_id)" 4
.IX Item "new($lang_id)"
Instantiate an object to split sentences in language \f(CW$lang_id\fR. If the language is not supported, a splitter object for English will be instantiated.
.IP "new($lang_id,$nonbreaking_prefix_file)" 4
.IX Item "new($lang_id,$nonbreaking_prefix_file)"
Instantiate an object to split sentences in language \f(CW$lang_id\fR and the nonbreaking prefix file \f(CW$nonbreaking_prefix_file\fR. If the file does not exist, a splitter object for English will be instantiated.
.IP "split($text)" 4
.IX Item "split($text)"
Split sentences in \f(CW$text\fR by inserting newline characters at the sentence breaks. The resulting string is also terminated with a newline.
.IP "split_array($text)" 4
.IX Item "split_array($text)"
Split sentences in \f(CW$text\fR into an array of sentences.
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs should always be submitted via the project hosting bug tracker
.PP
<http://code.google.com/p/corpus\-tools/issues/list>
.PP
For other issues, contact the maintainer.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Text::Sentence, Lingua::EN::Sentence, Lingua::DE::Sentence, Lingua::HE::Sentence
.SH "AUTHOR"
.IX Header "AUTHOR"
Achim Ruopp, <achimru@gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2010 by Digital Silk Road
.PP
Portions Copyright (C) 2005 by Philip Koehn and Josh Schroeder (used with permission)
.PP
This program is free software: you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0. See the
\&\s-1GNU\s0 Lesser General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
